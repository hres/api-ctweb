{
	"info": {
		"_postman_id": "19590b33-bb13-449a-9302-2bce48562f70",
		"name": "Clinical Trial Database (CTA)",
		"description": "The Clinical Trials Database provides to the public a listing of specific information relating to phase I, II and III clinical trials in patients. The database is managed by Health Canada and provides a source of information about Canadian clinical trials involving human pharmaceutical and biological drugs.\n\n\nContact Support:\n Email: open-ouvert@tbs-sct.gc.ca",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/sponsor all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da531047-36f9-405b-af4f-337184bdf227",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"     \"items\": {\r",
							"        \"required\": [\r",
							"            \"manufacturer_id\",\r",
							"            \"manufacturer_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"manufacturer_id\": {\r",
							"                \"$id\": \"#/items/properties/manufacturer_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"manufacturer_name\": {\r",
							"                \"$id\": \"#/items/properties/manufacturer_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d8f1841c-a3b8-4415-9401-b078df142aab",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"sponsor\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all sponsors."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sponsor?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sponsor"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sponsor?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sponsor"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all sponsors, or if an ID is provided, the list of all sponsors that correspond to the given sponsor ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sponsor?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sponsor"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"manufacturer_id\": \"ex do ut consequat sed\",\n  \"manufacturer_name\": \"minim ex\"\n },\n {\n  \"manufacturer_id\": \"pariatur cillum dolore\",\n  \"manufacturer_name\": \"esse do proident aliquip consequat\"\n }\n]"
				}
			]
		},
		{
			"name": "/sponsor id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "64e879f6-f91d-4ef4-bc72-6996cc98d7b1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"        \"required\": [\r",
							"        \"manufacturer_id\",\r",
							"        \"manufacturer_name\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"manufacturer_id\": {\r",
							"            \"$id\": \"#/properties/manufacturer_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"manufacturer_name\": {\r",
							"            \"$id\": \"#/properties/manufacturer_name\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"verify json values\", function () {\r",
							"   var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.manufacturer_id).to.eql(pm.variables.get(\"id\")); \r",
							"   pm.expect(jsonData.manufacturer_name).to.eql(\"UNITY HEALTH TORONTO\");   \r",
							"   pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6aa1d701-9862-46e8-9b06-b1e7edbb3936",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"sponsor\");\r",
							"pm.variables.set(\"id\",10661);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all sponsors."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sponsor?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sponsor"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all sponsors, or if an ID is provided, the list of all sponsors that correspond to the given sponsor ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sponsor?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sponsor"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"manufacturer_id\": \"ex do ut consequat sed\",\n  \"manufacturer_name\": \"minim ex\"\n },\n {\n  \"manufacturer_id\": \"pariatur cillum dolore\",\n  \"manufacturer_name\": \"esse do proident aliquip consequat\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sponsor?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sponsor"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/medicalcondition all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c00b1f9-0110-4746-b2cf-70c383699868",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"   \"items\": {\r",
							"        \"required\": [\r",
							"            \"med_condition_id\",\r",
							"            \"med_condition\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"med_condition_id\": {\r",
							"                \"$id\": \"#/items/properties/med_condition_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"med_condition\": {\r",
							"                \"$id\": \"#/items/properties/med_condition\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7f5f8e64-a38c-472b-a8d5-878159e54701",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"medicalcondition\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all medical conditions."
			},
			"response": [
				{
					"name": "Returns a list of all medical conditions, or if an ID is provided, the list of all medical conditions that correspond to the given medical condition ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicalcondition?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicalcondition"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"med_condition_id\": \"Duis fugiat veniam\",\n  \"med_condition\": \"ullamco est elit magna\"\n },\n {\n  \"med_condition_id\": \"ea\",\n  \"med_condition\": \"cupidatat cillum commodo Excepteur ut\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicalcondition?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicalcondition"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicalcondition?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicalcondition"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/medicalcondition id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cfd31439-6f0a-473f-806b-94863b3627c6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"    \"required\": [\r",
							"        \"med_condition_id\",\r",
							"        \"med_condition\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"med_condition_id\": {\r",
							"            \"$id\": \"#/properties/med_condition_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"med_condition\": {\r",
							"            \"$id\": \"#/properties/med_condition\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.med_condition_id).to.eql(187); \r",
							"   pm.expect(jsonData.med_condition).to.eql(\"PANCREATIC CANCER\");   \r",
							"   pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();       \r",
							"    pm.expect(jsonData.med_condition_id).to.eql(187); \r",
							"    pm.expect(jsonData.med_condition).to.eql(\"CANCER DU PANCRÉAS\");   \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "03564a99-02af-43d6-9532-f9b9711301ec",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"medicalcondition\");\r",
							"pm.variables.set(\"id\",187);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching sponsor ID"
						}
					]
				},
				"description": "Returns all medical conditions."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicalcondition?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicalcondition"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicalcondition?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicalcondition"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all medical conditions, or if an ID is provided, the list of all medical conditions that correspond to the given medical condition ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicalcondition?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicalcondition"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"med_condition_id\": \"Duis fugiat veniam\",\n  \"med_condition\": \"ullamco est elit magna\"\n },\n {\n  \"med_condition_id\": \"ea\",\n  \"med_condition\": \"cupidatat cillum commodo Excepteur ut\"\n }\n]"
				}
			]
		},
		{
			"name": "/drugproduct all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b05596ef-1487-42fe-b68b-b9ecd8ba9e31",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"    \"items\": {\r",
							"        \"required\": [\r",
							"            \"protocol_id\",\r",
							"            \"submission_no\",\r",
							"            \"brand_id\",\r",
							"            \"manufacturer_id\",\r",
							"            \"manufacturer_name\",\r",
							"            \"brand_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"protocol_id\": {\r",
							"                \"$id\": \"#/items/properties/protocol_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"submission_no\": {\r",
							"                \"$id\": \"#/items/properties/submission_no\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"brand_id\": {\r",
							"                \"$id\": \"#/items/properties/brand_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"manufacturer_id\": {\r",
							"                \"$id\": \"#/items/properties/manufacturer_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"manufacturer_name\": {\r",
							"                \"$id\": \"#/items/properties/manufacturer_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"brand_name\": {\r",
							"                \"$id\": \"#/items/properties/brand_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1ef96ce4-2a82-44a6-bbe7-ea965e5fb549",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"drugproduct\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all drug products."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all drug products, or if an ID is provided, the list of all protocols that correspond to the given brand ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"protocol_id\": \"in in\",\n  \"submission_no\": \"sed aute aliqua cillum\",\n  \"brand_id\": \"amet Ut\",\n  \"manufacturer_id\": \"do pariatur labore\",\n  \"manufacturer_name\": \"ut \",\n  \"brand_name\": \"ad ut aliqua\"\n },\n {\n  \"protocol_id\": \"ut mollit ea Excepteur\",\n  \"submission_no\": \"proident\",\n  \"brand_id\": \"nulla elit commodo ipsum est\",\n  \"manufacturer_id\": \"magna amet adipisicing cupidatat eu\",\n  \"manufacturer_name\": \"laboris officia eiusmod aliquip ea\",\n  \"brand_name\": \"culpa ipsum laboris Duis\"\n }\n]"
				}
			]
		},
		{
			"name": "/drugproduct id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "977353ff-296b-4ce7-806f-ec63a3612f80",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"required\": [\r",
							"        \"protocol_id\",\r",
							"        \"submission_no\",\r",
							"        \"brand_id\",\r",
							"        \"manufacturer_id\",\r",
							"        \"manufacturer_name\",\r",
							"        \"brand_name\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"protocol_id\": {\r",
							"            \"$id\": \"#/properties/protocol_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"submission_no\": {\r",
							"            \"$id\": \"#/properties/submission_no\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"brand_id\": {\r",
							"            \"$id\": \"#/properties/brand_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"manufacturer_id\": {\r",
							"            \"$id\": \"#/properties/manufacturer_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"manufacturer_name\": {\r",
							"            \"$id\": \"#/properties/manufacturer_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"brand_name\": {\r",
							"            \"$id\": \"#/properties/brand_name\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.brand_id).to.eql(154990); \r",
							"   pm.expect(jsonData.manufacturer_name).to.eql(\"DR ALESSANDRO DORIA\");   \r",
							"   pm.expect(jsonData.brand_name).to.eql(\"ALLOPURINOL\");   \r",
							"\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b2f13897-a829-4ca2-bca5-386511ca8a71",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"drugproduct\");\r",
							"pm.variables.set(\"id\",154990);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "3a6e7204c9be662766bdd70e317426aa",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all drug products."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all drug products, or if an ID is provided, the list of all protocols that correspond to the given brand ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"protocol_id\": \"in in\",\n  \"submission_no\": \"sed aute aliqua cillum\",\n  \"brand_id\": \"amet Ut\",\n  \"manufacturer_id\": \"do pariatur labore\",\n  \"manufacturer_name\": \"ut \",\n  \"brand_name\": \"ad ut aliqua\"\n },\n {\n  \"protocol_id\": \"ut mollit ea Excepteur\",\n  \"submission_no\": \"proident\",\n  \"brand_id\": \"nulla elit commodo ipsum est\",\n  \"manufacturer_id\": \"magna amet adipisicing cupidatat eu\",\n  \"manufacturer_name\": \"laboris officia eiusmod aliquip ea\",\n  \"brand_name\": \"culpa ipsum laboris Duis\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/protocol all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e53b681e-49d8-4cb3-8d60-286f0c6b661c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"protocol_id\",\r",
							"            \"protocol_no\",\r",
							"            \"submission_no\",\r",
							"            \"status_id\",\r",
							"            \"start_date\",\r",
							"            \"end_date\",\r",
							"            \"nol_date\",\r",
							"            \"protocol_title\",\r",
							"            \"medConditionList\",\r",
							"            \"studyPopulationList\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"protocol_id\": {\r",
							"                \"$id\": \"#/items/properties/protocol_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"protocol_no\": {\r",
							"                \"$id\": \"#/items/properties/protocol_no\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"submission_no\": {\r",
							"                \"$id\": \"#/items/properties/submission_no\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"status_id\": {\r",
							"                \"$id\": \"#/items/properties/status_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"start_date\": {\r",
							"                \"$id\": \"#/items/properties/start_date\",\r",
							"                \"type\": [\"string\", \"null\"]\r",
							"            },\r",
							"            \"end_date\": {\r",
							"                \"$id\": \"#/items/properties/end_date\",\r",
							"                 \"type\": [\"string\", \"null\"]\r",
							"            },\r",
							"            \"nol_date\": {\r",
							"                \"$id\": \"#/items/properties/nol_date\",\r",
							"                \"type\": [\"string\", \"null\"]\r",
							"            },\r",
							"            \"protocol_title\": {\r",
							"                \"$id\": \"#/items/properties/protocol_title\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"medConditionList\": {\r",
							"                \"items\": {\r",
							"                    \"required\": [\r",
							"                        \"med_condition_id\",\r",
							"                        \"med_condition\"\r",
							"                    ],\r",
							"                    \"properties\": {\r",
							"                        \"med_condition_id\": {\r",
							"                            \"$id\": \"#/items/properties/medConditionList/items/properties/med_condition_id\",\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"med_condition\": {\r",
							"                            \"$id\": \"#/items/properties/medConditionList/items/properties/med_condition\",\r",
							"                            \"type\": \"string\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"$id\": \"#/items/properties/medConditionList/items\",\r",
							"                    \"type\": \"object\"\r",
							"                },\r",
							"                \"$id\": \"#/items/properties/medConditionList\",\r",
							"                \"type\": \"array\"\r",
							"            },\r",
							"            \"studyPopulationList\": {\r",
							"                \"items\": {\r",
							"                    \"required\": [\r",
							"                        \"study_population_id\",\r",
							"                        \"study_population\"\r",
							"                    ],\r",
							"                    \"properties\": {\r",
							"                        \"study_population_id\": {\r",
							"                            \"$id\": \"#/items/properties/studyPopulationList/items/properties/study_population_id\",\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        \"study_population\": {\r",
							"                            \"$id\": \"#/items/properties/studyPopulationList/items/properties/study_population\",\r",
							"                            \"type\": \"string\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"$id\": \"#/items/properties/studyPopulationList/items\",\r",
							"                    \"type\": \"object\"\r",
							"                },\r",
							"                \"$id\": \"#/items/properties/studyPopulationList\",\r",
							"                \"type\": \"array\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "45e46d31-ef74-466b-b612-37d0c2e6e491",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"protocol\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all protocols."
			},
			"response": [
				{
					"name": "Returns a list of all protocols, or if an ID is provided, the list of all protocols that correspond to the given protocol ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/protocol?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"protocol"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"protocol_id\": \"Duis amet consequat\",\n  \"protocol_no\": \"Duis quis sunt do in\",\n  \"submission_no\": \"in nostrud commodo Excepteur\",\n  \"status_id\": \"Excepteur proident aliqua sit\",\n  \"start_date\": \"Duis qui\",\n  \"end_date\": \"minim deserunt irure\",\n  \"nol_date\": \"mini\",\n  \"protocol_title\": \"exercitation sed\",\n  \"medConditionList\": [\n   {\n    \"study_population_id\": \"magna ex et commodo deserunt\",\n    \"study_population\": \"cupidatat irur\"\n   },\n   {\n    \"study_population_id\": \"eu eiusmod amet Duis\",\n    \"study_population\": \"esse mollit laborum labore\"\n   }\n  ],\n  \"studyPopulationList\": [\n   {\n    \"study_population_id\": \"labore amet dolor deserunt\",\n    \"study_population\": \"sunt Duis sit\"\n   },\n   {\n    \"study_population_id\": \"consequat \",\n    \"study_population\": \"eu exercitation aliquip\"\n   }\n  ]\n },\n {\n  \"protocol_id\": \"dolore consectetur\",\n  \"protocol_no\": \"consectetur qui adipisicing ex\",\n  \"submission_no\": \"cillum Ut esse pariatur\",\n  \"status_id\": \"amet\",\n  \"start_date\": \"ut\",\n  \"end_date\": \"cillum ut ut\",\n  \"nol_date\": \"laborum veniam consequat\",\n  \"protocol_title\": \"in Ut sint\",\n  \"medConditionList\": [\n   {\n    \"study_population_id\": \"adipisicing\",\n    \"study_population\": \"quis\"\n   },\n   {\n    \"study_population_id\": \"anim enim dolor\",\n    \"study_population\": \"irure labore\"\n   }\n  ],\n  \"studyPopulationList\": [\n   {\n    \"study_population_id\": \"voluptate\",\n    \"study_population\": \"dolore mollit ad ex\"\n   },\n   {\n    \"study_population_id\": \"aliquip sint ullamco\",\n    \"study_population\": \"eiusmod ad sint d\"\n   }\n  ]\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/protocol?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"protocol"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/protocol?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"protocol"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/protocol id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "495d3267-f28c-4423-b42b-baefaa695819",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"\"required\": [\r",
							"        \"protocol_id\",\r",
							"        \"protocol_no\",\r",
							"        \"submission_no\",\r",
							"        \"status_id\",\r",
							"        \"start_date\",\r",
							"        \"end_date\",\r",
							"        \"nol_date\",\r",
							"        \"protocol_title\",\r",
							"        \"medConditionList\",\r",
							"        \"studyPopulationList\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"protocol_id\": {\r",
							"            \"$id\": \"#/properties/protocol_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"protocol_no\": {\r",
							"            \"$id\": \"#/properties/protocol_no\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"submission_no\": {\r",
							"            \"$id\": \"#/properties/submission_no\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"status_id\": {\r",
							"            \"$id\": \"#/properties/status_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"start_date\": {\r",
							"            \"$id\": \"#/properties/start_date\",\r",
							"            \"type\": [\"string\", \"null\"]\r",
							"        },\r",
							"        \"end_date\": {\r",
							"            \"$id\": \"#/properties/end_date\",\r",
							"            \"type\": [\"string\", \"null\"]\r",
							"        },\r",
							"        \"nol_date\": {\r",
							"            \"$id\": \"#/properties/nol_date\",\r",
							"            \"type\": [\"string\", \"null\"]\r",
							"        },\r",
							"        \"protocol_title\": {\r",
							"            \"$id\": \"#/properties/protocol_title\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"medConditionList\": {\r",
							"            \"items\": {\r",
							"                \"required\": [\r",
							"                    \"med_condition_id\",\r",
							"                    \"med_condition\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"med_condition_id\": {\r",
							"                        \"$id\": \"#/properties/medConditionList/items/properties/med_condition_id\",\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"med_condition\": {\r",
							"                        \"$id\": \"#/properties/medConditionList/items/properties/med_condition\",\r",
							"                        \"type\": \"string\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"#/properties/medConditionList/items\",\r",
							"                \"type\": \"object\"\r",
							"            },\r",
							"            \"$id\": \"#/properties/medConditionList\",\r",
							"            \"type\": \"array\"\r",
							"        },\r",
							"        \"studyPopulationList\": {\r",
							"            \"items\": {\r",
							"                \"required\": [\r",
							"                    \"study_population_id\",\r",
							"                    \"study_population\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"study_population_id\": {\r",
							"                        \"$id\": \"#/properties/studyPopulationList/items/properties/study_population_id\",\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"study_population\": {\r",
							"                        \"$id\": \"#/properties/studyPopulationList/items/properties/study_population\",\r",
							"                        \"type\": \"string\"\r",
							"                    }\r",
							"                },\r",
							"                \"$id\": \"#/properties/studyPopulationList/items\",\r",
							"                \"type\": \"object\"\r",
							"            },\r",
							"            \"$id\": \"#/properties/studyPopulationList\",\r",
							"            \"type\": \"array\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.protocol_id).to.eql(40310); \r",
							"   pm.expect(jsonData.protocol_title).to.eql(\"SHORT-COURSE ANTIMICROBIAL THERAPY FOR PAEDIATRIC RESPIRATORY INFECTION (SAFER): A MULTICENTRE, RANDOMIZED, CONTROLLED, NON-INFERIORITY TRIAL\");   \r",
							"   pm.expect(jsonData.medConditionList[0].med_condition_id).to.eql(442); \r",
							"   pm.expect(jsonData.medConditionList[0].med_condition).to.eql(\"PNEUMONIA\"); \r",
							"   pm.expect(jsonData.studyPopulationList[0].study_population_id).to.eql(3); \r",
							"   pm.expect(jsonData.studyPopulationList[0].study_population).to.eql(\"PEDIATRIC\"); \r",
							"   pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();       \r",
							"    pm.expect(jsonData.protocol_id).to.eql(40310); \r",
							"   pm.expect(jsonData.protocol_title).to.eql(\"UN TRAITEMENT ANTIMICROBIEN DE COURTE DURÉE POUR LES CAS D¿INFECTION RESPIRATOIRE CHEZ LES ENFANTS (ESSAI SAFER) : UN ESSAI DE NON-INFÉRIORITÉ MULTICENTRIQUE, RANDOMISÉ ET CONTRÔLÉ.\");   \r",
							"   pm.expect(jsonData.medConditionList[0].med_condition_id).to.eql(442); \r",
							"   pm.expect(jsonData.medConditionList[0].med_condition).to.eql(\"PNEUMONIE\"); \r",
							"   pm.expect(jsonData.studyPopulationList[0].study_population_id).to.eql(3); \r",
							"   pm.expect(jsonData.studyPopulationList[0].study_population).to.eql(\"PÉDIATRIQUE\");\r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f5eae01c-acf0-49f5-8701-5be52c1838df",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"protocol\");\r",
							"pm.variables.set(\"id\",40310);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/protocol?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"protocol"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching protocol ID"
						}
					]
				},
				"description": "Returns all protocols."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/protocol?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"protocol"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/protocol?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"protocol"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all protocols, or if an ID is provided, the list of all protocols that correspond to the given protocol ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/protocol?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"protocol"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"protocol_id\": \"Duis amet consequat\",\n  \"protocol_no\": \"Duis quis sunt do in\",\n  \"submission_no\": \"in nostrud commodo Excepteur\",\n  \"status_id\": \"Excepteur proident aliqua sit\",\n  \"start_date\": \"Duis qui\",\n  \"end_date\": \"minim deserunt irure\",\n  \"nol_date\": \"mini\",\n  \"protocol_title\": \"exercitation sed\",\n  \"medConditionList\": [\n   {\n    \"study_population_id\": \"magna ex et commodo deserunt\",\n    \"study_population\": \"cupidatat irur\"\n   },\n   {\n    \"study_population_id\": \"eu eiusmod amet Duis\",\n    \"study_population\": \"esse mollit laborum labore\"\n   }\n  ],\n  \"studyPopulationList\": [\n   {\n    \"study_population_id\": \"labore amet dolor deserunt\",\n    \"study_population\": \"sunt Duis sit\"\n   },\n   {\n    \"study_population_id\": \"consequat \",\n    \"study_population\": \"eu exercitation aliquip\"\n   }\n  ]\n },\n {\n  \"protocol_id\": \"dolore consectetur\",\n  \"protocol_no\": \"consectetur qui adipisicing ex\",\n  \"submission_no\": \"cillum Ut esse pariatur\",\n  \"status_id\": \"amet\",\n  \"start_date\": \"ut\",\n  \"end_date\": \"cillum ut ut\",\n  \"nol_date\": \"laborum veniam consequat\",\n  \"protocol_title\": \"in Ut sint\",\n  \"medConditionList\": [\n   {\n    \"study_population_id\": \"adipisicing\",\n    \"study_population\": \"quis\"\n   },\n   {\n    \"study_population_id\": \"anim enim dolor\",\n    \"study_population\": \"irure labore\"\n   }\n  ],\n  \"studyPopulationList\": [\n   {\n    \"study_population_id\": \"voluptate\",\n    \"study_population\": \"dolore mollit ad ex\"\n   },\n   {\n    \"study_population_id\": \"aliquip sint ullamco\",\n    \"study_population\": \"eiusmod ad sint d\"\n   }\n  ]\n }\n]"
				}
			]
		},
		{
			"name": "/status all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9730df87-da93-400e-83f0-7f0fb37c4e88",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"status_id\",\r",
							"            \"status\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"status_id\": {\r",
							"                \"$id\": \"#/items/properties/status_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"status\": {\r",
							"                \"$id\": \"#/items/properties/status\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "57ed0d23-661c-4e62-8e6d-0c2b8b452fd8",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"status\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all trial statuses."
			},
			"response": [
				{
					"name": "Returns a list of all statuses, or if an ID is provided, the list of all stasuses that correspond to the given status ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"status_id\": \"veniam tem\",\n  \"status\": \"dolore ut anim quis amet\"\n },\n {\n  \"status_id\": \"ex ad\",\n  \"status\": \"commodo deserunt quis\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/status id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf4948fd-70c1-42c4-8f96-b88b36cf2d15",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"     \"required\": [\r",
							"        \"status_id\",\r",
							"        \"status\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"status_id\": {\r",
							"            \"$id\": \"#/properties/status_id\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"$id\": \"#/properties/status\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"   var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.status_id).to.eql(1); \r",
							"   pm.expect(jsonData.status).to.eql(\"ONGOING\");   \r",
							"   pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json(); \r",
							"     pm.expect(jsonData.status_id).to.eql(1); \r",
							"   pm.expect(jsonData.status).to.eql(\"En cours\");   \r",
							"    pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ee8cb3ff-9864-4417-a70c-8489b4a13139",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"status\");\r",
							"pm.variables.set(\"id\",1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching status ID"
						}
					]
				},
				"description": "Returns all trial statuses."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all statuses, or if an ID is provided, the list of all stasuses that correspond to the given status ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"status_id\": \"veniam tem\",\n  \"status\": \"dolore ut anim quis amet\"\n },\n {\n  \"status_id\": \"ex ad\",\n  \"status\": \"commodo deserunt quis\"\n }\n]"
				}
			]
		},
		{
			"name": "/studypopulation all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f0171a01-1722-4174-b863-e7978029bedf",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"study_population_id\",\r",
							"            \"study_population\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"study_population_id\": {\r",
							"                \"$id\": \"#/items/properties/study_population_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"study_population\": {\r",
							"                \"$id\": \"#/items/properties/study_population\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "61e9dca5-a6a4-4847-beab-99df66a726ce",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"studypopulation\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						}
					]
				},
				"description": "Returns all study populations."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/studypopulation?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"studypopulation"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/studypopulation?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"studypopulation"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all study populations, or if an ID is provided, the list of all study populations that correspond to the given study population ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/studypopulation?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"studypopulation"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"study_population_id\": \"ut laboris nostrud\",\n  \"study_population\": \"consequat qui do esse\"\n },\n {\n  \"study_population_id\": \"reprehenderit fugiat\",\n  \"study_population\": \"consectetur dolor\"\n }\n]"
				}
			]
		},
		{
			"name": "/studypopulation id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7bcbb3a0-cc69-4e73-9a20-c2a47403e1f1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"if (pm.globals.get(\"language\") == \"en\"){\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();    \r",
							"   pm.expect(jsonData.study_population_id).to.eql(1); \r",
							"   pm.expect(jsonData.study_population).to.eql(\"ADULT MALE\");   \r",
							"   pm.globals.set(\"language\",\"fr\"); \r",
							"});\r",
							"}\r",
							"else{\r",
							"pm.test(\"verify json values\", function () {\r",
							"    var jsonData = pm.response.json();       \r",
							"    pm.expect(jsonData.study_population_id).to.eql(1); \r",
							"    pm.expect(jsonData.study_population).to.eql(\"ADULTE MASCULINE\");   \r",
							"     pm.globals.set(\"language\",\"en\");\r",
							"});\r",
							"}\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6fb581ba-78a4-4842-8f3c-e1e9268f4b3a",
						"exec": [
							"pm.globals.set(\"language\",\"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"studypopulation\");\r",
							"pm.variables.set(\"id\",1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with matching study population ID"
						}
					]
				},
				"description": "Returns all study populations."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/studypopulation?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"studypopulation"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all study populations, or if an ID is provided, the list of all study populations that correspond to the given study population ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/studypopulation?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"studypopulation"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"study_population_id\": \"ut laboris nostrud\",\n  \"study_population\": \"consequat qui do esse\"\n },\n {\n  \"study_population_id\": \"reprehenderit fugiat\",\n  \"study_population\": \"consectetur dolor\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/studypopulation?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"studypopulation"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://cta-hc-sc-apicast-production.api.canada.ca/v1/",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}